*********.  USER table *************

       CREATE TABLE users (
  id SERIAL PRIMARY KEY,
   fullname VARCHAR(100) NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  phone VARCHAR(20) UNIQUE NOT NULL,
  password TEXT NOT NULL,
  
  role VARCHAR(20) NOT NULL CHECK (role IN ('business', 'influencer', 'admin')),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE users
ADD COLUMN username TEXT,
ADD COLUMN profile_pic TEXT,
ADD COLUMN category TEXT,
ADD COLUMN stats JSONB,
ADD COLUMN prices JSONB,
ADD COLUMN data JSONB,
ADD COLUMN posts JSONB;

ALTER TABLE users
ADD COLUMN fb_id TEXT,
ADD COLUMN access_token TEXT,
ADD COLUMN username TEXT,
ADD COLUMN profile_pic TEXT,
ADD COLUMN category TEXT,
ADD COLUMN prices JSONB,
ADD COLUMN stats JSONB,
ADD COLUMN data JSONB,
ADD COLUMN posts JSONB;


ALTER TABLE users
ADD COLUMN fb_id TEXT,
ADD COLUMN access_token TEXT

ALTER TABLE users
ADD COLUMN fb_username TEXT,
ADD COLUMN fb_profile_pic TEXT,
ADD COLUMN fb_access_token TEXT,
ADD COLUMN ig_id TEXT,
ADD COLUMN ig_username TEXT,
ADD COLUMN ig_profile_pic TEXT,
ADD COLUMN ig_access_token TEXT,
ADD COLUMN tw_id TEXT,
ADD COLUMN tw_username TEXT,
ADD COLUMN tw_profile_pic TEXT,
ADD COLUMN tw_access_token TEXT,
ADD COLUMN yt_id TEXT,
ADD COLUMN yt_username TEXT,
ADD COLUMN yt_profile_pic TEXT,
ADD COLUMN yt_access_token TEXT

ALTER TABLE users
  ADD COLUMN facebook_data JSONB,
  ADD COLUMN facebook_posts JSONB;

ALTER TABLE users ADD COLUMN is2FAEnabled BOOLEAN DEFAULT FALSE;

ALTER TABLE users ADD COLUMN google_id VARCHAR;


ALTER TABLE users
ADD COLUMN business_name VARCHAR(255),
ADD COLUMN business_status VARCHAR(100),
ADD COLUMN service_type VARCHAR(100),
ADD COLUMN website VARCHAR(255),
ADD COLUMN location TEXT,
ADD COLUMN price_range VARCHAR(100),
ADD COLUMN account_status VARCHAR(50);

ALTER TABLE users
ADD COLUMN wishlist JSONB DEFAULT '[]'::JSONB;

************. messages table **********


  CREATE TABLE messages (
  id SERIAL PRIMARY KEY,
  sender_id INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  receiver_id INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  content TEXT NOT NULL,
  timestamp TIMESTAMPTZ DEFAULT NOW()
);




**********. OTPS **************

CREATE TABLE otps (
  id SERIAL PRIMARY KEY,
  email TEXT NOT NULL,
  otp TEXT NOT NULL,
  verified BOOLEAN DEFAULT FALSE,
  expires_at TIMESTAMP NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


*********** Orders Table ***************

CREATE TABLE orders (
  id SERIAL PRIMARY KEY,
  user_id INTEGER REFERENCES users(id),
  influencer_id INTEGER REFERENCES users(id),
  services TEXT[], -- Array of service names
  total_price NUMERIC,
  description TEXT,
  affiliated_links TEXT[],
  coupon_code TEXT,
  post_datetime TIMESTAMP,
  file_url TEXT,
  created_at TIMESTAMP DEFAULT NOW()
);


ALTER TABLE orders
ADD COLUMN IF NOT EXISTS inf_name TEXT,
ADD COLUMN IF NOT EXISTS username TEXT,
ADD COLUMN IF NOT EXISTS order_date TIMESTAMP DEFAULT NOW(),
ADD COLUMN IF NOT EXISTS scheduled_date DATE,
ADD COLUMN IF NOT EXISTS scheduled_time TIME,
ADD COLUMN IF NOT EXISTS order_type VARCHAR(20),
ADD COLUMN IF NOT EXISTS amount NUMERIC;
ADD COLUMN IF NOT EXISTS status VARCHAR(20) DEFAULT 'Pending';


********************* Service_Request *************************
CREATE TABLE service_requests (
  id SERIAL PRIMARY KEY,
  full_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  phone_number VARCHAR(20) NOT NULL,
  project_description TEXT NOT NULL,
  budget VARCHAR(50) NOT NULL,
  timeline VARCHAR(50) NOT NULL,
  service_title VARCHAR(100) NOT NULL,
  created_at TIMESTAMP NOT NULL
);

*************** offers table ******************
CREATE TABLE promotions (
    id SERIAL PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL,
    campaign_id VARCHAR(255) NOT NULL,
    unique_url TEXT NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE clicks (
    id SERIAL PRIMARY KEY,
    promotion_id INTEGER REFERENCES promotions(id) ON DELETE CASCADE,
    ip_address VARCHAR(45) NOT NULL,  -- Supports IPv4 and IPv6
    clicked_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE (promotion_id, ip_address)  -- Ensures no duplicate IPs per promotion
);


ALTER TABLE promotions
ADD COLUMN promotion_name VARCHAR(255),
ADD COLUMN status BOOLEAN DEFAULT TRUE;


************ NEWS SETTER *********************

CREATE TABLE IF NOT EXISTS newsletter (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  email TEXT UNIQUE NOT NULL,
  subscribed_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  source TEXT NOT NULL DEFAULT 'footer',
  ip INET,
  user_agent TEXT,
  status TEXT NOT NULL DEFAULT 'subscribed' CHECK (status IN ('subscribed','unsubscribed','bounced','pending'))
);




CLOUDINARY_URL=cloudinary://491314846178849:Z8tdIsOP4Gc53qDw_Cm1lCbkO4I@deq5tid6g